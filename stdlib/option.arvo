import prelude.
import equality.

data option (A : Type) := none : option A | some : A -> option A.

def option_case_simple : (A B : Type) -> B -> (A -> B) -> option A -> B :=
  \A. \B. \n. \s.
    option_elim A (\_. B)
      n
      s
  .

def option_map : (A B : Type) -> (f : A -> B) -> option A -> option B :=
  \A. \B. \f.
    option_case_simple A (option B)
      (none B)
      (\x. some B (f x))
  .

def option_bind : (A B : Type) -> (f : A -> option B) -> option A -> option B :=
  \A. \B. \f.
    option_case_simple A (option B)
      (none B)
      f
  .
