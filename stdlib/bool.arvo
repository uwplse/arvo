import equality.
import dec.

data bool := true | false.

def if : (A : Type) -> bool -> A -> A -> A :=
  \A. \b. \t. \f.
    bool_elim (\_. A)
              t
              f
              b.

def notb : bool -> bool :=
  \x. if bool x false true.

def andb : bool -> bool -> bool :=
  \x. \y.
    if bool x y false.

def orb : bool -> bool -> bool :=
  \x. \y.
    if bool x true y.

def eqb_bool : bool -> bool -> bool :=
  \x. \y.
    if bool x y (notb y).

def is_true : bool -> Type := \x. eq bool x true.

def decb : (A : Type) -> dec A -> bool :=
  \A.
    dec_case_simple A bool (\_. true) (\_. false)
  .
