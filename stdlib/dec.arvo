import prelude.

def dec : Type -> Type := \A. sum A (A -> False).

def dec_yes : (A : Type) -> A -> dec A :=
  \A. inj_l A (A -> False).

def dec_no : (A : Type) -> (A -> False) -> dec A :=
  \A. inj_r A (A -> False).

def dec_case_simple : (A B : Type) -> (A -> B) -> ((A -> False) -> B) -> dec A -> B :=
  \A. \B.
    sum_elim A (A -> False) (\_. B)
  .

def dec_case : (A : Type) -> (P : dec A -> Type) -> 
               ((x : A) -> P (dec_yes A x)) -> 
               ((y : A -> False) -> P (dec_no A y)) -> 
               (d : dec A) -> P d := 
  \A. 
    sum_elim A (A -> False)
  .
               
